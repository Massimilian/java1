Random – это класс, который способен генерировать псевдослучайные значения различных типов, а также генерировать целые массивы случайных значений. Для работы теперь уже придётся создать объект класса Random. Пример использования:

public class Main {
    public static void main(String[] args) {
        Random random = new Random();
        System.out.println(random.nextInt()); // псевдослучайные значения различных типов. Диапазон – от минимального до максимального int
        System.out.println(random.nextLong()); // диапазон – от минимального до максимального long.
        System.out.println(random.nextFloat()); // диапазон – от 0 (включительно) до 1 (исключительно)
        System.out.println(random.nextDouble()); // диапазон – от 0 (включительно) до 1 (исключительно)
        System.out.println(random.nextBoolean()); // true/false
        byte[] bytes = new byte[7];
        random.nextBytes(bytes); // заполняем массив random-значениями
        System.out.println(Arrays.toString(bytes)); // выводим массив в консоль
    }
}

Метод .nextInt() может принимать в качестве параметра значение и дальше выводить числа от ноля (включительно) до этого значения (исключительно). Например:

public class Main {
    public static void main(String[] args) throws IOException {
        Random random = new Random();
        System.out.println(random.nextInt(10)); // выведет значение от ноля (включительно) до 10 (исключительно) 
    }
}

Ну а если нам надо псевдослучайное число в размере от min до max, то можно применить уже известную формулу:

public class Main {
    public static void main(String[] args) {
        int min = -15;
        int max = -10;
        Random random = new Random();
        System.out.println(random.nextInt(max - min) + min); // выведет значение от ноля (включительно) до 10 (исключительно)
    }
}

Также класс Random может создавать потоки int/double/long, которые затем можно присвоить в массив либо коллекцию. Например:

public class Main {
    public static void main(String[] args) {
        int size = 10;
        int min = -10;
        int max = 0;
        int[] integers = new Random().ints(size, min, max).toArray(); // создаёт массив из size значений int от min до max.
        double[] doubles = new Random().doubles(size, min, max).toArray(); // тоже самое с double
        System.out.println(Arrays.toString(integers) + Arrays.toString(doubles));
    }
}

Создание псевдослучайных чисел можно спроектировать при помощи значения seed (зерно), которое нужно с самого начала заложить внутрь Random. Практически всегда seed участвует в алгоритме получения следующего псевдослучайного числа. Seed можно указать при создании экземпляра класса Random (целочисленное значение типа long), а потом можно задать посередине – тогда алгоритм станет предсказуемым (по образу и подобию прошедшего алгоритма). Пример:

public class Main {
    public static void main(String[] args) {
        Random random = new Random(1L); // задаём seed
        for (int i = 0; i < 5; i++) {
            System.out.print(random.nextInt() + " ");
        }
        System.out.println();
        random.setSeed(1L); // снова задаём seed
        for (int i = 0; i < 5; i++) {
            System.out.print(random.nextInt() + " "); // последовательность повторится. Даже после перезапуска программы.
        }
    }
}


Материалы любезно предоставлены http://progwards.ru/
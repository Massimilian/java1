Это абстрактный класс, который хранит в себе информацию о часовом поясе. Пояс можно указать одним из трёх способов:
ZoneId zi = ZoneId.of("Europe/Moscow"); // прямое указание зоны
ZoneId zia = ZoneId.of("UTC+12"); // указание зоны с поправкой на UTC (+4 часа); значение должно быть в периоде от -18 до 18
ZoneId zib = ZoneId.of("-01:00:00"); //  указание зоны с поправкой на часы (-1 час); значение должно быть в периоде от -18 до 18
System.out.println(zi.getRules()); // вывод информации о зоне zi (указание корректировки часов)
	.
Однако в этом классе не хранится информации о правилах временной зоны. Чтобы обратиться к правилам, необходимо обратиться к классу ZoneRules, который получается из ZoneId при помощи метода .getRules().
	При помощи класса ZoneId мы можем получить экземпляр класса ZonedDateTime, который способен непосредственно работать со временем.
ZoneId zi = ZoneId.of("Europe/Moscow"); // прямое указание зоны
Instant inst = Instant.now();
ZonedDateTime zdt = inst.atZone(zi);
System.out.println("Time is " + zdt.getHour() + ":" + zdt.getMinute() + ":" + zdt.getSecond() + "."); // выведет информацию о текущем времени

ZoneRules - это класс, в котором хранятся правила конкретного ZoneId. Вызывается этот класс из ZoneId методом getRules(), а дальше мы вытаскиваем ту информацию, которая нам нужна:
•	getOffset(Instant instant) – информация о часовом поясе;
•	isDayightSavings(Instant inst) – информация о том, есть ли переход на зимнее/летнее время;

Материалы любезно предоставлены http://progwards.ru/
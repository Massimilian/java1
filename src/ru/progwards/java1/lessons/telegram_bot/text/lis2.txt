...
LinkedList – классический связный список, где каждый элемент имеет ссылку на объект, который хранит; ссылку на предыдущее звено; ссылку на последующее звено. Также сам LinkedList содержит в себе ссылки на первый и последний элементы.
	При создании LinkedList создаётся объект с пустыми ссылками на первый и последний элементы. При добавлении первого элемента эти ссылки начинают ссылаться именно на него. При дальнейшем добавлении одна из ссылок меняется – в зависимости от того, куда добавляется элемент – в начало или в конец. Кроме того, меняет ссылку на соответствующее звено соседний элемент. Если же элемент ставится в позицию между двумя уже стоящими элементами, то ссылки LinkedList не меняются, а вот оба соседних звена меняют свои ссылки. При удалении элементов происходят аналогичные процессы по обнулению/изменению ссылок.
	Особые методы LinkedList:
•	void push (E e) – вставить элемент в начало списка;
•	E poll() – взять первый элемент из списка и удалить его оттуда (если элементов нет, вернёт null);
•	E pollLast() - взять последний элемент из списка и удалить его оттуда (если элементов нет, вернёт null);
•	E removeFirst() – аналог poll, но если элемента нет, выбросит ошибку NoSuchElementException;
•	E removeLast() – аналог pollLast, но если элемента нет, выбросит ошибку NoSuchElementException.
	Общие принципы скорости работы:
•	Любые операции в начале и конце LinkedList происходят быстро.
•	Любые операции в середине LinkedList происходит медленно.
Конструкторы:
•	LinkedList() – без параметров;
•	LinkedList(Collection<? extends E> c) – конструктор с добавлением всех элементов коллекции c.
ArrayList используется чаще, но LinkedList следует использовать, если предвидится много добавлений/удалений в начале списка; добавление элементов в середину списка в LinkedList лучше не использовать.

Материалы любезно предоставлены http://progwards.ru/
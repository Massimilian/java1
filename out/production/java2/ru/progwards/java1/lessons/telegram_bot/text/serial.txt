Самый старший среди всех сборщиков. Работает строго в одном потоке. До JDK 8 в кучу включал молодое, старое поколение и PermGen (метаданные по классами и методам – так называемое «вечное поколение»); после JDK 8 PermGen перемещён в MetaSpace и удалён из кучи. 
Молодое поколение находится в Эдеме (Eden), далее они отправляются в S0 или S1 (S = Survivors). Прошедшие несколько раз S0 и S1 отправляются в Tenured, где находится старшее поколение. В Tenured также попадают объекты, которые не поместились в S0 или S1.
Малая сборка мусора работает следующим образом: 
1.Эдем переполнен. Тогда память освобождается, а выжившие объекты помещаются в S0. Там объекты уплотняются, и никакой фрагментации нет.
2.Эдем переполнен во второй раз. Тогда мы снова чистим Эдем, но теперь все объекты, которые выжили, объединяем из объектов из S0, дефрагентируем и отправляем в S1.
3.Эдем опять переполнен. Чистимся, дефрагментируемся (уплотняемся) и отправляем выживших в S0 вместе с объектами из S1.
Полная сборка мусора работает по-другому:
Tenured переполнен. Инициализируется малая сборка, а Tenured чистится и дефрагментируется.
Каждая сборка мусора в Serial вызывает состояние STW (Stop-The-World) – это полная остановка программы, когда все потоки останавливаются, работают лишь служебные потоки JVM. Во время STW программа не способна отвечать. STW необходимо сборщику, так как осматривать объекты сложно, когда они меняются в процессе и потому что при перемещении объекта необходимо обновить все его ссылки.
Serial GC хорош с малыми объёмами данных (до 100mb), надёжен, прост в применении; но медленный на больших объёмах, работает только в одном потоке.
Настройки Serial GC:
-xms, -xmx – настройка параметров кучи (минимальный и максимальный размеры).
-XX:+UseSerialGC – выбор Serial GC как сборщика мусора.
-XX:MinHeapFreeRatio – порог в % для выделения в памяти кучи (по умолчанию 40). Если свободной памяти кучи осталось менее чем 40 (по умолчанию) процентов, происходит автоматическое увеличение размера кучи
-XX:MaxHeapFreeRatio – порог в % для освобождения памяти кучи (по умолчанию 70). Если память кучи свободна более, чем на 70 (по умолчанию) процентов – происходит автоматическое уменьшение размера кучи.
-XX:NewRatio – соотношение Old/Young (по умолчанию 2). 2/3 будет занято старым поколение, а 1/3 молодым.
-Xmn – размер молодого поколения (начальный = максимальному).
-XX: NewSize – начальный размер молодого поколения (по умолчанию 1.3mb).
-XX:MaxNewSize – максимальный размер молодого поколения.
-XX:SurvivorRatio – начальное соотношение Edem/Survivor (по умолчанию 8). Это значит, что Edem больше в 8 (по умолчанию) раз.
-XX:MinSurvivorRatio – минимальное соотношение Edem/Survivor (по умолчанию 3). Это значение, до которого может увеличиваться Survivor – в данном случае до размера трети (по умолчанию) от Edem.
Узнать текущий сборщик мусора можно при помощи команды java -XX:+PrintCommandLineFlags -version. Чтобы вывести информацию обо всех настройках, связанных с Survivor, необходимо набрать команду java -XX:+PrintFlagsFinal -version | findstr Survivor.
Материалы любезно предоставлены http://progwards.ru/
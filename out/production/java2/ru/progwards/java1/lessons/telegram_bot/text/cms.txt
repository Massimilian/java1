	Deprecated в JDK 9. Работает постоянно, сокращает паузы STW. Serial и Parallel имеют в своей основе алгоритм Mark(пометить) – Sweep (удалить) – Compact (сжать). CMS использует алгоритм Mark (пометить) – Sweep (удалить). Малая сборка работает, как в Serial; вместо полной сборки работает major-сборка, которая работает непрерывно и только со старшим поколением. Пометка объектов происходит в момент STW, но удаление и часть пометок идёт параллельно с ходом программы. Таким образом пауза STW становится совсем неразличимой. Иногда может произойти сбой конкурентного режима (когда очистка старого поколения не успевает за заполнением, которое происходит быстрее); иногда получается, что сборщику некуда копировать файлы, так как всё заполнено фрагментированными кусочками (иногда возникает в CMS); тогда может родиться значительная пауза STW – то есть полная очистка по типу Serial.
	Этапы работы:
1.	Пометка корневых объектов (STW).
2.	Пометка остальных живых объектов (Parallel).
3.	Окончательная пометка живых объектов (STW).
4.	Чистка (Parallel).
	Настройки CMS – в точности как Parallel, плюс:
•	-XX:+UseConcMarkSweepGC – выбор CMS GC.
•	-XX:+CMSInitiatingOccupanceFraction – процент заполнения для старшего поколения для major чистики мусора. Если не указать этот параметр – включится сам.
Главные минусы – оставляет кучу фрагментированной, требует больше ресурсов и иногда тормозит (при запуске длительного STW) – но в большинстве случаев работает быстрее, чем Parallel.
Материалы любезно предоставлены http://progwards.ru/
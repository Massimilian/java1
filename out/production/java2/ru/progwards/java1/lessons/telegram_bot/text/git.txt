Это система контроля версия кода, позволяющая хранить старые и подгружать новые версии.

Все команды прописываются со словом git перед самой командой.
•	--version – версия git, установленная на компьютере;
•	--help – показывает все возможности git на данном этапе, список используемых команд;
•	init – создание системной папки .git, в которой будут храниться версии (инициализация репозитория);
•	status – вывод информации о статусе git (т.е. какие файлы не сохранены в git);
•	log – вывод информации о последних изменениях в git – x последних коммитов в виде строчки
 	--pretty=oneline – в добавок к log – делает вывод информации в однострочном режиме;
 	--max-count=x – в добавок к log – выводит только x последних коммитов;

•	add имя_файла - добавление файла под названием имя_файла в статус отслеживаемых файлов;
•	add . – добавление всех файлов текущей папки в статус отслеживаемых файлов;
•	rm -r --cached имя_файла – снятие с файла под названием имя_файла статуса отслеживаемого;
•	commit -m ”название_коммита” – коммит (фиксация изменений) под названием «название_коммита»;

•	branch – название текущих веток, та, в которой находимся – будет выделена звёздочкой;
•	branch новая_ветка – создание новой ветки под названием «новая_ветка»;
•	branch -D новая_ветка – удаление ветки под названием «новая_ветка»;
•	checkout новая_ветка – переключение на ветку «новая_ветка»;
•	checkout -b “новая_ветка” – создание новой ветки и мгновенное переключение на неё;
•	merge “новая_ветка” – слив изменений из ветки «новая_ветка» в ту ветку, де мы сейчас находимся;
•	push – залить все изменения на удалённый (глобальный) репозиторий.
•	pull – залить все последние изменения из удалённого (глобального) репозитория.

Если в одной ветке произведены изменения, они не коснутся других веток – изменения останутся только в этой ветке. Например, есть изменения в ветке «новая_ветка», которых нет в ветке master – при работе из ветки «новая_ветка» эти изменения будут видны, из master – нет. Чтобы изменения появились и в master-ветке, необходимо из master вызвать команду merge с названием той ветки, откуда мы берём изменения.

По сути, git – это локальный репозиторий. Но наша задача – выйти на онлайн-пространство. Для этого необходимо зарегистрироваться в GitHub. Все команды прописываются со словом git перед самой командой.
•	config --global user.name – получение информации об имени пользователя GitHub с данного компьютера;
•	config --global user.email – получение информации об адресе электронной почты пользователя GitHub с данного компьютера;
•	config --global user.name “new_name” – смена (занесение нового) имени (аналогичная команда по смене/внесению mail);
•	remote add origin адрес_GitHub_репозитория – связывание локального и глобального (прописанного по адресу адрес_GitHub_репозитория) репозиториев;
•	push -u origin master – обновление глобального репозитория (push) веткой master.
Любой открытый репозиторий можно скачать как zip-файл.

Материалы любезно предоставлены https://git-scm.com/
Каждый раз, добавляя элемент в динамический массив, мы увеличиваем его размер на единицу. Каждый раз мы вынуждены перезаписывать данные, что, в принципе, является трудозатратной операцией (особенно, если у нас уже много данных). Поэтому мы попробуем немного улучшить наш класс и увеличивать размер его внутреннего массива каждый раз на заданное число массива при переполнении, что поможет избежать проблем с производительностью. Это будет динамический массив с блочным инкрементом. В конструкторе мы разместим начальный размер внутреннего массива и насколько этот массив будет вырастать при переполнении:

public class Array<T> { // создаём класс с генериком
    T[] array; // создаём массив классов, прописанных как генерик
    int size; // количество заполненных элементов; по умолчанию будет равно нолю
    int blockSize; // размер того, на сколько мы будем увеличивать размер нашего массива классов

    public Array(int size, int blockSize) {
        this.array = (T[]) new Object[size];
        this.blockSize = blockSize;
    }

    public void add(T t) {
        if (array.length == size) { // в первый раз size будет равен нолю.
            int size = this.array == null ? 1 : this.array.length + this.blockSize; // если мы добавляем значение в этот массив в первый раз - то делаем длину 1; если не первый - увеличиваем длину на заданное количество.
            Object[] newArray = new Object[size]; // создаём новый массив с обновлённым размером
            this.copydata(newArray); // осуществляем перезапись
            array = (T[]) newArray; // перезаписываем основной массив в новый массив с такими же данными + 1 ячейка
        }
        size++; // сейчас size у нас меньше, чем длина array, на один. Исправляем.
        array[size - 1] = t; // записываем элемент в массива (в последний пустой элемент)
    }

    private void copydata(Object[] objects) {
        for (int i = 0; i < this.array.length; i++) { // данные из массива array преезаписываются в новый массив
            objects[i] = this.array[i];
        }
    }

    public T get(int num) {
        return array[num];
    }
}

Материалы любезно предоставлены http://progwards.ru/
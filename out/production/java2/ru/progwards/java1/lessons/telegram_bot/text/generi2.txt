...
Названия обобщений принято именовать так:
<E> - тип элемента коллекции;
<K>, <V> - тип ключей и значений в таблице;
<T> (<U>, <S>) – любой тип вообще
Обобщений не рекомендуется добавлять более 2 в один класс, так как они могут начать путаться при программировании.
Задача: из некоторого количества однотипных отсортированных данных вытащить среднее значение.
Напишем пока не универсальный метод, который будет возвращать int. Количество данных нам неизвестно, поэтому в прописывании аргумента мы воспользуемся следующим синтаксисом – (int… args), который будет принимать произвольное количество данных типа int и внутрь метода передавать их как массив.
public int middle(int... args) {
    return args[args.length/2];
}

	Теперь сделаем этот метод универсальным – тип int меняем на T. Перед указанием типа возвращаемого значения обязательно прописываем Generic в угловых скобках;
Public <T> T middle(T... args) {
    return args[args.length/2];
}

Пропишем main-метод:

public class Main {
    public static void main(String[] args) {
        NotSafetyClass<Integer> nsc = new NotSafetyClass();
        System.out.println(nsc.middle(1, "two", new Object())); // выведет "two"
    }
}

Так как на входе мы не указали тип входящих объектов, то все они по умолчанию – Object. Теперь пропишем то же, но с указанием на конкретный тип объекта – String:
public class Main {
    public static void main(String[] args) {
        NotSafetyClass nsc = new NotSafetyClass();
        System.out.println(nsc.<String>middle("1", "two", new String())); // выведет "two", но теперь все три вхожящих значения – String.
    }
}
 
...
Для продолжения наберите "gener3"
Материалы любезно предоставлены http://progwards.ru/
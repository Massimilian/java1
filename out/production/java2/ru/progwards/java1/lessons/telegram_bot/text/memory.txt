Память подразделяется на кучу и стек. Куча – место хранения объектов, она медленная. Стек – место хранения переменных, он быстрый. Когда мы создаём переменную, то она помещается в стек и хранится там вместе со своим значением. Когда мы создаём объект, то сам объект хранится в куче, а ссылка на этот объект – в стеке. В функцию все параметры передаются через стек, и после завершения работы функции юлок параметров функции удаляется. Поэтому примитивы, хранящиеся в стеке, внутри функции не изменяются, а объекты после работы функции остаются в изменённом состоянии (переменные объекта также меняются).
String не меняется внутри функции, как примитив (так как строка неизменна, и у нас просто создаётся новый объект с сохранением ссылок на старый). Та же история с классами-обёртками.

class Str {
    String string;

    public Str(String string) {
        this.string = string;
    }
}

public class Test {
    public static void test(int integer, Str string) {
        string.string += " Some more information."; // видоизменяем объект типа Str
        integer++; // видоизменяем примитив типа int
    }

    public static void main(String[] args) {
        Str s = new Str("Some information.");
        int i = 0;
        test(i, s); // запускаем метод по изменению данных
        System.out.println(s.string); // Вывод - "Some information. Some more information.". Объект изменился
        System.out.println(i); // Вывод - 0. Примитив остался неизменным.
    }
}

Материалы любезно предоставлены http://progwards.ru/
Этот класс отвечает за форматирование даты для вывода на экран  в пакете java.util. Внутри этого класса создаётся шаблон форматирования, и при выводе даты через этот класс особенности форматирования будут учтены.
Правила форматирования:
•	Буквы задают формат;
•	Количество символов влияет на результат, причём нередко «лишние» символы добираются нолями (например, год YYYYY превратится в 02020);
•	Иные символы просто переносятся в результат;
•	Для вывода текста нужно использовать ‘одинарные кавычки’, а для вывода одной одинарной кавычки – ‘’;
•	Для вывода названий дней недели, месяцев можно указывать Locale.

Конструкторы:
•	SimpleDateFormat() – дефолтный конструктор;
•	SimpleDateFormat(String pattern) – конструктор с указанием формата;
•	SimpleDateFormat(String pattern, Locale locale) – конструктор с указанием формата и локали;
•	SimpleDateFormat(String pattern, DateFormatSymbols formatSymbols) – конструктор со своими названиями месяцев и дней недели.

Методы:
•	String format(Date date) – преобразует в строку по заданному шаблону;
•	Date parse (String source) – преобразует из строки в дату согласно шаблону (еслинекоторые данные отсутствуют, они инициализируются нолями);
•	void setCalendar(Calendar newCalendar) – установка календаря;
•	void setTimeZone(TimeZone zone) – установка календарной зоны;
•	void setLenient(boolean lenient) – установка снисходительности (если установлена в false, то даты, выходящие за пределы – по типу 13 месяца – перестанут парситься и выдадут ошибку); по умолчанию установлено в true.

Синтаксис выглядит таким образом:
Символ // Значение // Представление // Пример
G // обозначение эры // Текст // AD, н.э.
y или yyyy // год (4 цифры) // Число // 2017
Yy // год  (2 последние цифры) // Число // 17
M // номер месяца без лидирующих нулей // Число // 1, 11
MM // номер месяца дополненный нулями // Число // 01, 11
MMM // сокращенное название месяца // Текст // дек, Dec
MMMM // полное название месяца (контекстно-зависимое) // Текст // декабря, December
LLLL // полное название месяца (контекстно-независимое) // Текст // Декабрь, December
W // неделя в году // Число // 13
w // неделя в месяце // Число // 3
D // день в году // Число // 172
d // день месяца // Число // 11
F // день недели в месяце // Число //1
E // сокращенное название дня недели // Текст // Ср, Wed
EEEE // полное название дня недели // Текст // среда, Wednesday
U // номер дня недели (1-пн .. 7-вск) // Число // 3
A // маркер am/pm // Текст // AM
H // Час в дне (0-23) // Число // 0
H // Часы в am/pm (1-12) // Число // 12
K // час в am/pm (0-11) // Число // 0
k // час в дне (1-24) // Число // 24
m // минута в часе // Число // 18
s // секунда в минуте // Число // 35
S // миллисекунды // Число // 978
z // часовой пояс // Текст // GMT+07:00
Z // часовой пояс в формате RFC 822 // Текст // 700
X // часовой пояс в формате ISO 8601 // Текст // 7

Примеры использования: 
SimpleDateFormat sdf1 = new SimpleDateFormat("d MMMM yyyy 'года'"); // формат по типу "15 декабря 2020 года"
SimpleDateFormat sdf2 = new SimpleDateFormat("'Точное время 'H' часов, 'm' минут, 's' секунд.'"); // формат по типу "Точное время 9 часов, 52 минут, 19 секунд."
SimpleDateFormat sdf3 = new SimpleDateFormat("hh:m:s(S) a"); // формат по типу "09:58:35(908) AM" (в скобках миллисекунды)
System.out.println(sdf3.format(new Date())); // вывод даты на экран

Материалы любезно предоставлены http://progwards.ru/